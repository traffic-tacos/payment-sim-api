syntax = "proto3";

package payment.v1;

import "proto/common/v1/common.proto";

option go_package = "github.com/traffic-tacos/payment-sim-api/gen/go/proto/payment/v1";

// Payment service for processing payment simulations
service PaymentService {
  rpc CreatePaymentIntent(CreatePaymentIntentRequest) returns (CreatePaymentIntentResponse);
  rpc GetPaymentIntent(GetPaymentIntentRequest) returns (GetPaymentIntentResponse);
  rpc ProcessPayment(ProcessPaymentRequest) returns (ProcessPaymentResponse);
}

// Payment status enum
enum PaymentStatus {
  PAYMENT_STATUS_UNSPECIFIED = 0;
  PAYMENT_STATUS_PENDING = 1;
  PAYMENT_STATUS_APPROVED = 2;
  PAYMENT_STATUS_FAILED = 3;
  PAYMENT_STATUS_EXPIRED = 4;
}

// Create payment intent request
message CreatePaymentIntentRequest {
  string reservation_id = 1;
  string user_id = 2;
  common.v1.Money amount = 3;
  string scenario = 4;       // "approve", "fail", "success", "failed", "random"
  string webhook_url = 5;    // URL to send payment status updates (실제 PG사처럼)
}

// Create payment intent response
message CreatePaymentIntentResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
  int64 created_at = 3;
}

// Get payment intent request
message GetPaymentIntentRequest {
  string payment_id = 1;
}

// Get payment intent response
message GetPaymentIntentResponse {
  string payment_id = 1;
  string reservation_id = 2;
  string user_id = 3;
  common.v1.Money amount = 4;
  PaymentStatus status = 5;
  int64 created_at = 6;
  int64 processed_at = 7;
}

// Process payment request (for manual triggering)
message ProcessPaymentRequest {
  string payment_id = 1;
}

// Process payment response
message ProcessPaymentResponse {
  string payment_id = 1;
  PaymentStatus status = 2;
}